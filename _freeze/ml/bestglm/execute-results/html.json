{
  "hash": "a813b48c2d756961b4f03fe1b5d7f094",
  "result": {
    "markdown": "---\ntitle: \"Best GLM\"\n---\n\n\n\n\n- [Bestglm R package](http://cran.nexr.com/web/packages/bestglm/)\n- [Bestglm Paper](http://cran.nexr.com/web/packages/bestglm/vignettes/bestglm.pdf)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bestglm)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: leaps\n```\n:::\n\n```{.r .cell-code}\ndata(zprostate)\n```\n:::\n\n\nOutcome: `lpsa` = Prostate-Specific Antigen (psa)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskimr::skim(zprostate)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |          |\n|:------------------------|:---------|\n|Name                     |zprostate |\n|Number of rows           |97        |\n|Number of columns        |10        |\n|_______________________  |          |\n|Column type frequency:   |          |\n|logical                  |1         |\n|numeric                  |9         |\n|________________________ |          |\n|Group variables          |None      |\n\n\n**Variable type: logical**\n\n|skim_variable | n_missing| complete_rate| mean|count            |\n|:-------------|---------:|-------------:|----:|:----------------|\n|train         |         0|             1| 0.69|TRU: 67, FAL: 30 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate| mean|   sd|    p0|   p25|   p50|   p75| p100|hist  |\n|:-------------|---------:|-------------:|----:|----:|-----:|-----:|-----:|-----:|----:|:-----|\n|lcavol        |         0|             1| 0.00| 1.00| -2.29| -0.71|  0.08|  0.66| 2.10|‚ñÉ‚ñÖ‚ñá‚ñÜ‚ñÉ |\n|lweight       |         0|             1| 0.00| 1.00| -2.93| -0.59| -0.01|  0.58| 2.69|‚ñÅ‚ñÉ‚ñá‚ñÜ‚ñÅ |\n|age           |         0|             1| 0.00| 1.00| -3.07| -0.52|  0.15|  0.56| 2.03|‚ñÅ‚ñÅ‚ñÖ‚ñá‚ñÇ |\n|lbph          |         0|             1| 0.00| 1.00| -1.02| -1.02|  0.14|  1.00| 1.53|‚ñá‚ñÅ‚ñÇ‚ñÉ‚ñÖ |\n|svi           |         0|             1| 0.00| 1.00| -0.52| -0.52| -0.52| -0.52| 1.89|‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÇ |\n|lcp           |         0|             1| 0.00| 1.00| -0.86| -0.86| -0.44|  0.97| 2.21|‚ñá‚ñÇ‚ñÇ‚ñÇ‚ñÇ |\n|gleason       |         0|             1| 0.00| 1.00| -1.04| -1.04|  0.34|  0.34| 3.11|‚ñÖ‚ñá‚ñÅ‚ñÅ‚ñÅ |\n|pgg45         |         0|             1| 0.00| 1.00| -0.86| -0.86| -0.33|  0.55| 2.68|‚ñá‚ñÉ‚ñÇ‚ñÇ‚ñÅ |\n|lpsa          |         0|             1| 2.48| 1.15| -0.43|  1.73|  2.59|  3.06| 5.58|‚ñÅ‚ñÖ‚ñá‚ñÉ‚ñÅ |\n:::\n:::\n\n## Regsubset\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain <- (zprostate[zprostate[, 10], ])[, -10]\nX <- train[, 1:8]\ny <- train[, 9]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- summary(regsubsets(x = X, y = y, nvmax = ncol(X)))\nSubsets <- out$which\nRSS <- out$rss\n\n\nzprostate_regsub_tbl <-\n  cbind(as.data.frame(Subsets), RSS = RSS) |> \n  relocate(RSS) |> \n  mutate(across(where(is.logical), ~ifelse(.x, \"*\", NA)))\n\nzprostate_regsub_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       RSS (Intercept) lcavol lweight  age lbph  svi  lcp gleason pgg45\n1 44.52858           *      *    <NA> <NA> <NA> <NA> <NA>    <NA>  <NA>\n2 37.09185           *      *       * <NA> <NA> <NA> <NA>    <NA>  <NA>\n3 34.90775           *      *       * <NA> <NA>    * <NA>    <NA>  <NA>\n4 32.81499           *      *       * <NA>    *    * <NA>    <NA>  <NA>\n5 32.06945           *      *       * <NA>    *    * <NA>    <NA>     *\n6 30.53978           *      *       * <NA>    *    *    *    <NA>     *\n7 29.43730           *      *       *    *    *    *    *    <NA>     *\n8 29.42638           *      *       *    *    *    *    *       *     *\n```\n:::\n:::\n\n## Best GLM\n\n### Linear Reg\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# `y` must be the last column\nXy <- cbind(as.data.frame(X), lpsa = y)\n\nzprostate_bestglm <- bestglm(Xy)\nnames(zprostate_bestglm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"BestModel\"   \"BestModels\"  \"Bestq\"       \"qTable\"      \"Subsets\"    \n[6] \"Title\"       \"ModelReport\"\n```\n:::\n:::\n\n\n\n`BestModel`: lm or glm object giving the best model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzprostate_bestglm$BestModel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ ., data = data.frame(Xy[, c(bestset[-1], FALSE), \n    drop = FALSE], y = y))\n\nCoefficients:\n(Intercept)       lcavol      lweight  \n     2.4774       0.7397       0.3163  \n```\n:::\n:::\n\n\n`BestModels`: a ùëá √ó ùëù logical matrix showing which variables are included in the top ùëá models\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzprostate_bestglm$BestModels\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  lcavol lweight   age  lbph   svi   lcp gleason pgg45 Criterion\n1   TRUE    TRUE FALSE FALSE FALSE FALSE   FALSE FALSE -31.20741\n2   TRUE    TRUE FALSE FALSE  TRUE FALSE   FALSE FALSE -31.06884\n3   TRUE    TRUE FALSE  TRUE  TRUE FALSE   FALSE FALSE -31.00630\n4   TRUE    TRUE FALSE FALSE FALSE FALSE   FALSE  TRUE -30.06625\n5   TRUE   FALSE FALSE  TRUE  TRUE FALSE   FALSE FALSE -29.06138\n```\n:::\n:::\n\n\n`Subsets`: a (ùëù + 1) √ó ùëù logical matrix showing which variables are included for subset sizes ùëò = 0, . . . , ùëù have the smallest deviance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzprostate_bestglm$Subsets\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   (Intercept) lcavol lweight   age  lbph   svi   lcp gleason pgg45\n0         TRUE  FALSE   FALSE FALSE FALSE FALSE FALSE   FALSE FALSE\n1         TRUE   TRUE   FALSE FALSE FALSE FALSE FALSE   FALSE FALSE\n2*        TRUE   TRUE    TRUE FALSE FALSE FALSE FALSE   FALSE FALSE\n3         TRUE   TRUE    TRUE FALSE FALSE  TRUE FALSE   FALSE FALSE\n4         TRUE   TRUE    TRUE FALSE  TRUE  TRUE FALSE   FALSE FALSE\n5         TRUE   TRUE    TRUE FALSE  TRUE  TRUE FALSE   FALSE  TRUE\n6         TRUE   TRUE    TRUE FALSE  TRUE  TRUE  TRUE   FALSE  TRUE\n7         TRUE   TRUE    TRUE  TRUE  TRUE  TRUE  TRUE   FALSE  TRUE\n8         TRUE   TRUE    TRUE  TRUE  TRUE  TRUE  TRUE    TRUE  TRUE\n   logLikelihood       BIC\n0      -12.14653  24.29306\n1       13.68680 -23.16892\n2*      19.80840 -31.20741\n3       21.84146 -31.06884\n4       23.91254 -31.00630\n5       24.68243 -28.34139\n6       26.31970 -27.41124\n7       27.55141 -25.66996\n8       27.56383 -21.49012\n```\n:::\n:::\n\n`qTable`: a table showing all possible model choices for different intervals of ùëû.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nzprostate_bestglm$qTable\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          LogL           q1           q2 k\n[1,] -12.14653 0.000000e+00 4.940404e-11 0\n[2,]  13.68680 4.940404e-11 1.764939e-02 1\n[3,]  19.80840 1.764939e-02 5.125667e-01 2\n[4,]  23.91254 5.125667e-01 7.087642e-01 4\n[5,]  27.55141 7.087642e-01 8.899197e-01 7\n[6,]  27.56383 8.899197e-01 1.000000e+00 8\n```\n:::\n:::\n\n\n### Log Reg\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ISLR2)\ndata(\"Default\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDefault_Xy <- Default |> relocate(default, .after = last_col())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDefault_b.glm <- bestglm(Default_Xy, family = binomial(), \n                         IC = \"BIC\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nMorgan-Tatar search since family is non-gaussian.\n```\n:::\n:::\n\n\n\n`BestModel`: lm or glm object giving the best model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDefault_b.glm$BestModel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:  glm(formula = y ~ ., family = family, data = Xi, weights = weights)\n\nCoefficients:\n(Intercept)   studentYes      balance  \n -10.749496    -0.714878     0.005738  \n\nDegrees of Freedom: 9999 Total (i.e. Null);  9997 Residual\nNull Deviance:\t    2921 \nResidual Deviance: 1572 \tAIC: 1578\n```\n:::\n:::\n\n\n`BestModels`: a ùëá √ó ùëù logical matrix showing which variables are included in the top ùëá models\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDefault_b.glm$BestModels\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  student balance income Criterion\n1    TRUE    TRUE  FALSE  1590.102\n2   FALSE    TRUE   TRUE  1597.387\n3    TRUE    TRUE   TRUE  1599.176\n4   FALSE    TRUE  FALSE  1605.662\n5    TRUE   FALSE  FALSE  2917.893\n```\n:::\n:::\n\n\n### Log Reg (Penguin)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\ndata(penguins)\n# Only work with this\npenguins_Xy <- penguins |> \n  relocate(sex, .after = last_col()) |> \n  select(ends_with(\"_mm\"), body_mass_g, sex) |> \n  mutate(across(where(is.integer), as.double)) |> \n  filter(!if_any(everything(), ~is.na(.x))) |> \n  as.data.frame() # Must\n\nhead(penguins_Xy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  bill_length_mm bill_depth_mm flipper_length_mm body_mass_g    sex\n1           39.1          18.7               181        3750   male\n2           39.5          17.4               186        3800 female\n3           40.3          18.0               195        3250 female\n4           36.7          19.3               193        3450 female\n5           39.3          20.6               190        3650   male\n6           38.9          17.8               181        3625 female\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_bestglm <- bestglm::bestglm(penguins_Xy, \n                                     family = binomial())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nMorgan-Tatar search since family is non-gaussian.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_bestglm$BestModels\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  bill_length_mm bill_depth_mm flipper_length_mm body_mass_g Criterion\n1          FALSE          TRUE             FALSE        TRUE  175.9541\n2           TRUE          TRUE             FALSE        TRUE  177.3122\n3          FALSE          TRUE              TRUE        TRUE  181.7523\n4           TRUE          TRUE              TRUE        TRUE  182.2360\n5           TRUE          TRUE              TRUE       FALSE  268.3962\n```\n:::\n:::\n",
    "supporting": [
      "bestglm_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}